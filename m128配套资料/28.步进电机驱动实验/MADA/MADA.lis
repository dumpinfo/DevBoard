                        .module MADA.C
                        .area text(rom, con, rel)
 0000                   .dbfile C:/icc/include/delay.h
 0000                   .dbfunc e delay_1us _delay_1us fV
                        .even
 0000           _delay_1us::
 0000                   .dbline -1
 0000                   .dbline 20
 0000           ; //M128_ZZX_1的步进电机驱动程序
 0000           ; //步进电机为四相八拍驱动方式，额定电压5V,ABCD对应PB1~PB4
 0000           ; ///编译环境 ICCAVR 
 0000           ; //系统时钟7.3728MHZ，设置熔丝位为外部高频石英晶体振荡，启动时间4.1ms
 0000           ; //忠兴电子元件店编辑
 0000           ; //日期：2010.01.14
 0000           ; 
 0000           ; //***********************************************************************
 0000           ; //                    包含文件
 0000           ; //***********************************************************************
 0000           ; 
 0000           ; #include <string.h>
 0000           ; #include <stdio.h>
 0000           ; #include <delay.h>
 0000           ; #include <iom128v.h>
 0000           ; 
 0000           ; //***********************************************************************
 0000           ; //                    定义变量区
 0000           ; //***********************************************************************
 0000           ; 
 0000                   .dbline 21
 0000           ; #define uchar           unsigned char
 0000 0000              nop
 0002                   .dbline 22
 0002           ; #define uint            unsigned int
 0002 0000              nop
 0004                   .dbline 23
 0004           ; #define Data_IO               PORTA                //液晶数据口
 0004 0000              nop
 0006                   .dbline 24
 0006           ; #define Data_DDR        DDRA                 //数据口方向寄存器
 0006 0000              nop
 0008                   .dbline 25
 0008           ; #define D_LE0         PORTD &= ~(1 << PD4) //数码管段控制位为0，锁存端口数据
 0008 0000              nop
 000A                   .dbline 26
 000A           ; #define D_LE1           PORTD |= (1 << PD4)  //数码管段控制位为1，锁存器输出与端口一致
 000A 0000              nop
 000C                   .dbline -2
 000C           L1:
 000C                   .dbline 0 ; func end
 000C 0895              ret
 000E                   .dbend
 000E                   .dbfunc e delay_3us _delay_3us fV
                        .even
 000E           _delay_3us::
 000E                   .dbline -1
 000E                   .dbline 30
 000E           ; #define W_LE0         PORTD &= ~(1 << PD5) //数码管位控制位为0
 000E           ; #define W_LE1           PORTD |= (1 << PD5)  //数码管位控制位为1
 000E           ; 
 000E           ; uchar  F_Rotation[8]={0xE2,0xE6,0xE4,0xEC,0xE8,0xF8,0xF0,0xF2};//正转表格， 0111，0011 1011，1001 1101，1100 ，1110，0110
 000E                   .dbline 32
 000E           ; //a--ab-b-bc-c-cd-d-da 四相八拍方式
 000E           ; uchar  B_Rotation[8]={0xF2,0xF0,0xF8,0xE8,0xEC,0xE4,0xE6,0xE2};//反转表格
 000E 0000              nop
 0010                   .dbline 33
 0010           ; 
 0010 0000              nop
 0012                   .dbline 34
 0012           ; //***********************************************************************
 0012 0000              nop
 0014                   .dbline 35
 0014           ; //                    主程序
 0014 0000              nop
 0016                   .dbline 36
 0016           ; //***********************************************************************
 0016 0000              nop
 0018                   .dbline 37
 0018           ; void main(void)
 0018 0000              nop
 001A                   .dbline 38
 001A           ; {
 001A 0000              nop
 001C                   .dbline 39
 001C           ;  uint i,j;
 001C 0000              nop
 001E                   .dbline 40
 001E           ;       DDRB=0xFF;
 001E 0000              nop
 0020                   .dbline 41
 0020           ;     PORTD=0xFF;
 0020 0000              nop
 0022                   .dbline 42
 0022           ;       DDRD=0xFF;
 0022 0000              nop
 0024                   .dbline 43
 0024           ;       D_LE1;                             //关掉数码管，以免显示乱码                   
 0024 0000              nop
 0026                   .dbline 44
 0026           ;     W_LE1;                     
 0026 0000              nop
 0028                   .dbline 45
 0028           ;     Data_IO=0xFF;                      //关数码管            
 0028 0000              nop
 002A                   .dbline 46
 002A           ;     W_LE0; 
 002A 0000              nop
 002C                   .dbline 47
 002C           ;   while(1)
 002C 0000              nop
 002E                   .dbline 48
 002E           ;    {
 002E 0000              nop
 0030                   .dbline 49
 0030           ;    for(j=0;j<64*8;j++)                           //步距角5.625/64 减速比1/64，8拍，这个循环为反转一圈
 0030 0000              nop
 0032                   .dbline 50
 0032           ;    {
 0032 0000              nop
 0034                   .dbline 51
 0034           ;     for(i=0;i<8;i++)
 0034 0000              nop
 0036                   .dbline 52
 0036           ;       {
 0036 0000              nop
 0038                   .dbline -2
 0038           L2:
 0038                   .dbline 0 ; func end
 0038 0895              ret
 003A                   .dbend
 003A                   .dbfunc e delay_10us _delay_10us fV
                        .even
 003A           _delay_10us::
 003A                   .dbline -1
 003A                   .dbline 56
 003A           ;     PORTB=B_Rotation[i];
 003A           ;       delay_nms(10);
 003A           ;     }
 003A           ;    }
 003A                   .dbline 57
 003A           ;    for(j=0;j<64*8;j++)                                   //步距角5.625/64 减速比1/64，8拍，这个循环为正转一圈
 003A E9DF              xcall _delay_3us
 003C                   .dbline 58
 003C           ;    {
 003C E8DF              xcall _delay_3us
 003E                   .dbline 59
 003E           ;     for(i=0;i<8;i++)
 003E E7DF              xcall _delay_3us
 0040                   .dbline -2
 0040           L3:
 0040                   .dbline 0 ; func end
 0040 0895              ret
 0042                   .dbend
 0042                   .dbfunc e delay_50us _delay_50us fV
                        .even
 0042           _delay_50us::
 0042                   .dbline -1
 0042                   .dbline 63
 0042           ;       {
 0042           ;     PORTB=F_Rotation[i];
 0042           ;       delay_nms(10);
 0042           ;     }
 0042                   .dbline 64
 0042           ;    }
 0042 FBDF              xcall _delay_10us
 0044                   .dbline 65
 0044           ;    
 0044 FADF              xcall _delay_10us
 0046                   .dbline 66
 0046           ;    }
 0046 F9DF              xcall _delay_10us
 0048                   .dbline 67
 0048           ; }
 0048 F8DF              xcall _delay_10us
 004A                   .dbline -2
 004A           L4:
 004A                   .dbline 0 ; func end
 004A 0895              ret
 004C                   .dbend
 004C                   .dbfunc e delay_100us _delay_100us fV
                        .even
 004C           _delay_100us::
 004C                   .dbline -1
 004C                   .dbline 70
 004C           ; }
 004C           ; }
 004C           ; }
 004C                   .dbline 71
 004C           ; }
 004C FADF              xcall _delay_50us
 004E                   .dbline 72
 004E           ; }
 004E F9DF              xcall _delay_50us
 0050                   .dbline -2
 0050           L5:
 0050                   .dbline 0 ; func end
 0050 0895              ret
 0052                   .dbend
 0052                   .dbfunc e delay_n100us _delay_n100us fV
 0052           ;         n100us -> R20
                        .even
 0052           _delay_n100us::
 0052 0E940000          xcall push_gset1
 0056 402F              mov R20,R16
 0058                   .dbline -1
 0058                   .dbline 75
 0058           ; }
 0058           ; }
 0058           ; }
 0058 01C0              xjmp L8
 005A           L7:
 005A                   .dbline 77
 005A F8DF              xcall _delay_100us
 005C           L8:
 005C                   .dbline 76
 005C           ; }
 005C 242E              mov R2,R20
 005E 3324              clr R3
 0060 4150              subi R20,1
 0062 2220              tst R2
 0064 D1F7              brne L7
 0066                   .dbline -2
 0066           L6:
 0066 0E940000          xcall pop_gset1
 006A                   .dbline 0 ; func end
 006A 0895              ret
 006C                   .dbsym r n100us 20 c
 006C                   .dbend
 006C                   .dbfunc e delay_1ms _delay_1ms fV
                        .even
 006C           _delay_1ms::
 006C                   .dbline -1
 006C                   .dbline 89
 006C           ; }
 006C           ; }
 006C           ; }
 006C           ; }
 006C           ; }
 006C           ; }
 006C           ; }
 006C           ; }
 006C           ; }
 006C           ; }
 006C           ; }
 006C           ; }
 006C           ; }
 006C                   .dbline 90
 006C           ; }
 006C EFDF              xcall _delay_100us
 006E                   .dbline 91
 006E           ; }
 006E EEDF              xcall _delay_100us
 0070                   .dbline 92
 0070           ; }
 0070 EDDF              xcall _delay_100us
 0072                   .dbline 93
 0072           ; }
 0072 ECDF              xcall _delay_100us
 0074                   .dbline 94
 0074           ; }
 0074 EBDF              xcall _delay_100us
 0076                   .dbline 95
 0076           ; }
 0076 EADF              xcall _delay_100us
 0078                   .dbline 96
 0078           ; }
 0078 E9DF              xcall _delay_100us
 007A                   .dbline 97
 007A           ; }
 007A E8DF              xcall _delay_100us
 007C                   .dbline 98
 007C           ; }
 007C E7DF              xcall _delay_100us
 007E                   .dbline 99
 007E           ; }
 007E E6DF              xcall _delay_100us
 0080                   .dbline -2
 0080           L10:
 0080                   .dbline 0 ; func end
 0080 0895              ret
 0082                   .dbend
 0082                   .dbfunc e delay_nms _delay_nms fV
 0082           ;            nms -> R20,R21
                        .even
 0082           _delay_nms::
 0082 0E940000          xcall push_gset1
 0086 A801              movw R20,R16
 0088                   .dbline -1
 0088                   .dbline 109
 0088           ; }
 0088           ; }
 0088           ; }
 0088           ; }
 0088           ; }
 0088           ; }
 0088           ; }
 0088           ; }
 0088           ; }
 0088           ; }
 0088 01C0              xjmp L13
 008A           L12:
 008A                   .dbline 111
 008A F0DF              xcall _delay_1ms
 008C           L13:
 008C                   .dbline 110
 008C           ; }
 008C 1A01              movw R2,R20
 008E 4150              subi R20,1
 0090 5040              sbci R21,0
 0092 2220              tst R2
 0094 D1F7              brne L12
 0096 3320              tst R3
 0098 C1F7              brne L12
 009A           X0:
 009A                   .dbline -2
 009A           L11:
 009A 0E940000          xcall pop_gset1
 009E                   .dbline 0 ; func end
 009E 0895              ret
 00A0                   .dbsym r nms 20 i
 00A0                   .dbend
 00A0                   .dbfunc e delay_ns _delay_ns fV
 00A0           ;             ns -> R20
                        .even
 00A0           _delay_ns::
 00A0 0E940000          xcall push_gset1
 00A4 402F              mov R20,R16
 00A6                   .dbline -1
 00A6                   .dbline 114
 00A6           ; }
 00A6           ; }
 00A6           ; }
 00A6           ; }
 00A6 03C0              xjmp L17
 00A8           L16:
 00A8                   .dbline 116
 00A8 08EE              ldi R16,1000
 00AA 13E0              ldi R17,3
 00AC EADF              xcall _delay_nms
 00AE           L17:
 00AE                   .dbline 115
 00AE           ; }
 00AE 242E              mov R2,R20
 00B0 3324              clr R3
 00B2 4150              subi R20,1
 00B4 2220              tst R2
 00B6 C1F7              brne L16
 00B8                   .dbline -2
 00B8           L15:
 00B8 0E940000          xcall pop_gset1
 00BC                   .dbline 0 ; func end
 00BC 0895              ret
 00BE                   .dbsym r ns 20 c
 00BE                   .dbend
                        .area data(ram, con, rel)
 0000                   .dbfile C:/icc/include/delay.h
 0000           _F_Rotation::
 0000                   .blkb 2
                        .area idata
 0000 E2E6              .byte 226,230
                        .area data(ram, con, rel)
 0002                   .dbfile C:/icc/include/delay.h
 0002                   .blkb 2
                        .area idata
 0002 E4EC              .byte 228,236
                        .area data(ram, con, rel)
 0004                   .dbfile C:/icc/include/delay.h
 0004                   .blkb 2
                        .area idata
 0004 E8F8              .byte 232,248
                        .area data(ram, con, rel)
 0006                   .dbfile C:/icc/include/delay.h
 0006                   .blkb 2
                        .area idata
 0006 F0F2              .byte 240,242
                        .area data(ram, con, rel)
 0008                   .dbfile C:/icc/include/delay.h
 0008                   .dbfile E:\ATMEGA128开发板\我的ATMEGA128最小系统板\M128_ZZX_1配套资料\28.步进电机驱动实验\MADA\MADA.C
 0008                   .dbsym e F_Rotation _F_Rotation A[8:8]c
 0008           _B_Rotation::
 0008                   .blkb 2
                        .area idata
 0008 F2F0              .byte 242,240
                        .area data(ram, con, rel)
 000A                   .dbfile E:\ATMEGA128开发板\我的ATMEGA128最小系统板\M128_ZZX_1配套资料\28.步进电机驱动实验\MADA\MADA.C
 000A                   .blkb 2
                        .area idata
 000A F8E8              .byte 248,232
                        .area data(ram, con, rel)
 000C                   .dbfile E:\ATMEGA128开发板\我的ATMEGA128最小系统板\M128_ZZX_1配套资料\28.步进电机驱动实验\MADA\MADA.C
 000C                   .blkb 2
                        .area idata
 000C ECE4              .byte 236,228
                        .area data(ram, con, rel)
 000E                   .dbfile E:\ATMEGA128开发板\我的ATMEGA128最小系统板\M128_ZZX_1配套资料\28.步进电机驱动实验\MADA\MADA.C
 000E                   .blkb 2
                        .area idata
 000E E6E2              .byte 230,226
                        .area data(ram, con, rel)
 0010                   .dbfile E:\ATMEGA128开发板\我的ATMEGA128最小系统板\M128_ZZX_1配套资料\28.步进电机驱动实验\MADA\MADA.C
 0010                   .dbsym e B_Rotation _B_Rotation A[8:8]c
                        .area text(rom, con, rel)
 00BE                   .dbfile E:\ATMEGA128开发板\我的ATMEGA128最小系统板\M128_ZZX_1配套资料\28.步进电机驱动实验\MADA\MADA.C
 00BE                   .dbfunc e main _main fV
 00BE           ;              j -> R20,R21
 00BE           ;              i -> R22,R23
                        .even
 00BE           _main::
 00BE                   .dbline -1
 00BE                   .dbline 38
 00BE                   .dbline 40
 00BE 8FEF              ldi R24,255
 00C0 87BB              out 0x17,R24
 00C2                   .dbline 41
 00C2 82BB              out 0x12,R24
 00C4                   .dbline 42
 00C4 81BB              out 0x11,R24
 00C6                   .dbline 43
 00C6 949A              sbi 0x12,4
 00C8                   .dbline 44
 00C8 959A              sbi 0x12,5
 00CA                   .dbline 45
 00CA 8BBB              out 0x1b,R24
 00CC                   .dbline 46
 00CC 9598              cbi 0x12,5
 00CE 38C0              xjmp L21
 00D0           L20:
 00D0                   .dbline 48
 00D0                   .dbline 49
 00D0 4427              clr R20
 00D2 5527              clr R21
 00D4 15C0              xjmp L26
 00D6           L23:
 00D6                   .dbline 50
 00D6                   .dbline 51
 00D6 6627              clr R22
 00D8 7727              clr R23
 00DA 0CC0              xjmp L30
 00DC           L27:
 00DC                   .dbline 52
 00DC                   .dbline 53
 00DC 80E0              ldi R24,<_B_Rotation
 00DE 90E0              ldi R25,>_B_Rotation
 00E0 FB01              movw R30,R22
 00E2 E80F              add R30,R24
 00E4 F91F              adc R31,R25
 00E6 2080              ldd R2,z+0
 00E8 28BA              out 0x18,R2
 00EA                   .dbline 54
 00EA 0AE0              ldi R16,10
 00EC 10E0              ldi R17,0
 00EE C9DF              xcall _delay_nms
 00F0                   .dbline 55
 00F0           L28:
 00F0                   .dbline 51
 00F0 6F5F              subi R22,255  ; offset = 1
 00F2 7F4F              sbci R23,255
 00F4           L30:
 00F4                   .dbline 51
 00F4 6830              cpi R22,8
 00F6 E0E0              ldi R30,0
 00F8 7E07              cpc R23,R30
 00FA 80F3              brlo L27
 00FC                   .dbline 56
 00FC           L24:
 00FC                   .dbline 49
 00FC 4F5F              subi R20,255  ; offset = 1
 00FE 5F4F              sbci R21,255
 0100           L26:
 0100                   .dbline 49
 0100 4030              cpi R20,0
 0102 E2E0              ldi R30,2
 0104 5E07              cpc R21,R30
 0106 38F3              brlo L23
 0108                   .dbline 57
 0108 4427              clr R20
 010A 5527              clr R21
 010C 15C0              xjmp L34
 010E           L31:
 010E                   .dbline 58
 010E                   .dbline 59
 010E 6627              clr R22
 0110 7727              clr R23
 0112 0CC0              xjmp L38
 0114           L35:
 0114                   .dbline 60
 0114                   .dbline 61
 0114 80E0              ldi R24,<_F_Rotation
 0116 90E0              ldi R25,>_F_Rotation
 0118 FB01              movw R30,R22
 011A E80F              add R30,R24
 011C F91F              adc R31,R25
 011E 2080              ldd R2,z+0
 0120 28BA              out 0x18,R2
 0122                   .dbline 62
 0122 0AE0              ldi R16,10
 0124 10E0              ldi R17,0
 0126 ADDF              xcall _delay_nms
 0128                   .dbline 63
 0128           L36:
 0128                   .dbline 59
 0128 6F5F              subi R22,255  ; offset = 1
 012A 7F4F              sbci R23,255
 012C           L38:
 012C                   .dbline 59
 012C 6830              cpi R22,8
 012E E0E0              ldi R30,0
 0130 7E07              cpc R23,R30
 0132 80F3              brlo L35
 0134                   .dbline 64
 0134           L32:
 0134                   .dbline 57
 0134 4F5F              subi R20,255  ; offset = 1
 0136 5F4F              sbci R21,255
 0138           L34:
 0138                   .dbline 57
 0138 4030              cpi R20,0
 013A E2E0              ldi R30,2
 013C 5E07              cpc R21,R30
 013E 38F3              brlo L31
 0140                   .dbline 66
 0140           L21:
 0140                   .dbline 47
 0140 C7CF              xjmp L20
 0142           X1:
 0142                   .dbline -2
 0142           L19:
 0142                   .dbline 0 ; func end
 0142 0895              ret
 0144                   .dbsym r j 20 i
 0144                   .dbsym r i 22 i
 0144                   .dbend
