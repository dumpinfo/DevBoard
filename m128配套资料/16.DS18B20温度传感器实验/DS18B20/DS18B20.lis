                        .module DS18B20.C
                        .area text(rom, con, rel)
 0000                   .dbfile C:/icc/include/delay.h
 0000                   .dbfunc e delay_1us _delay_1us fV
                        .even
 0000           _delay_1us::
 0000                   .dbline -1
 0000                   .dbline 20
 0000           ; //ATMEGA128的温度传感器DS18B20控制程序，显示环境温度
 0000           ; //DS18b20的C语言驱动程序，三位数码管显示，读取当前环境温度，精度达0.1度，温度范围0-99度
 0000           ; //DS18B20 详细引脚功能描述1、GND 地信号；2、DQ数据输入出引脚。开漏单总线接口引脚。当被用在寄生电源下
 0000           ; //也可以向器件提供电源；3、VDD可选择的VDD 引脚。当工作于寄生电源时，此引脚必须接地。
 0000           ; //DS18B20 的使用方法。DS18B20 采用的是1－Wire 总线协议方式
 0000           ; //即在一根数据线实现数据的双向传输
 0000           ; //编译环境 ICCAVR 
 0000           ; //系统时钟7.3728MHZ，设置熔丝位为外部高频石英晶体振荡，启动时间4.1ms
 0000           ; //忠兴电子元件店编辑
 0000           ; //日期：2010.01.14
 0000           ; 
 0000           ; //***********************************************************************
 0000           ; //                    包含文件
 0000           ; //***********************************************************************
 0000           ; 
 0000           ; #include <string.h>
 0000           ; #include <stdio.h>
 0000           ; #include <delay.h>
 0000           ; #include <iom128v.h>
 0000           ; 
 0000                   .dbline 21
 0000           ; //***********************************************************************
 0000 0000              nop
 0002                   .dbline 22
 0002           ; //                    定义变量区
 0002 0000              nop
 0004                   .dbline 23
 0004           ; //***********************************************************************
 0004 0000              nop
 0006                   .dbline 24
 0006           ; #define uchar           unsigned char
 0006 0000              nop
 0008                   .dbline 25
 0008           ; #define uint            unsigned int
 0008 0000              nop
 000A                   .dbline 26
 000A           ; 
 000A 0000              nop
 000C                   .dbline -2
 000C           L1:
 000C                   .dbline 0 ; func end
 000C 0895              ret
 000E                   .dbend
 000E                   .dbfunc e delay_3us _delay_3us fV
                        .even
 000E           _delay_3us::
 000E                   .dbline -1
 000E                   .dbline 30
 000E           ; #define Data_IO               PORTA                   //数码管数据口
 000E           ; #define Data_DDR        DDRA                  //数码管数据口方向寄存器
 000E           ; #define D_LE0         PORTD &= ~(1 << PD4)    //数码管段控制位为0，锁存端口数据
 000E           ; #define D_LE1           PORTD |= (1 << PD4)   //数码管段控制位为1，锁存器输出与端口一致
 000E                   .dbline 32
 000E           ; #define W_LE0         PORTD &= ~(1 << PD5)    //数码管位控制位为0
 000E           ; #define W_LE1           PORTD |= (1 << PD5)   //数码管位控制位为1
 000E 0000              nop
 0010                   .dbline 33
 0010           ; 
 0010 0000              nop
 0012                   .dbline 34
 0012           ; #define DQ_IN         DDRE &= ~(1 << PE4)             //设置输入，DS18B20接单片机PE4口
 0012 0000              nop
 0014                   .dbline 35
 0014           ; #define DQ_OUT                DDRE |= (1 << PE4)              //设置输出
 0014 0000              nop
 0016                   .dbline 36
 0016           ; #define DQ_CLR                PORTE &= ~(1 << PE4)    //置低电平
 0016 0000              nop
 0018                   .dbline 37
 0018           ; #define DQ_SET                PORTE |= (1 << PE4)             //置高电平
 0018 0000              nop
 001A                   .dbline 38
 001A           ; #define DQ_R          PINE & (1 << PE4)               //读电平
 001A 0000              nop
 001C                   .dbline 39
 001C           ; 
 001C 0000              nop
 001E                   .dbline 40
 001E           ; uchar key;
 001E 0000              nop
 0020                   .dbline 41
 0020           ; uint temp_value;
 0020 0000              nop
 0022                   .dbline 42
 0022           ; uint temp,A1,A2,A3;                                   //定义的变量,显示数据处理
 0022 0000              nop
 0024                   .dbline 43
 0024           ; uchar flag1; 
 0024 0000              nop
 0026                   .dbline 44
 0026           ; 
 0026 0000              nop
 0028                   .dbline 45
 0028           ; //***********************************************************************
 0028 0000              nop
 002A                   .dbline 46
 002A           ; //                    共阴数码管显示的断码表0～F
 002A 0000              nop
 002C                   .dbline 47
 002C           ; //***********************************************************************
 002C 0000              nop
 002E                   .dbline 48
 002E           ; 
 002E 0000              nop
 0030                   .dbline 49
 0030           ; uchar table[]={0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,
 0030 0000              nop
 0032                   .dbline 50
 0032           ;                  0x7f,0x6f,0x77,0x7c,0x39,0x5e,0x79,0x71};
 0032 0000              nop
 0034                   .dbline 51
 0034           ; 
 0034 0000              nop
 0036                   .dbline 52
 0036           ; //***********************************************************************
 0036 0000              nop
 0038                   .dbline -2
 0038           L2:
 0038                   .dbline 0 ; func end
 0038 0895              ret
 003A                   .dbend
 003A                   .dbfunc e delay_10us _delay_10us fV
                        .even
 003A           _delay_10us::
 003A                   .dbline -1
 003A                   .dbline 56
 003A           ; //                    IO端口初始化
 003A           ; //***********************************************************************
 003A           ; 
 003A           ; void System_Init()
 003A                   .dbline 57
 003A           ; {
 003A E9DF              xcall _delay_3us
 003C                   .dbline 58
 003C           ;     Data_IO=0xFF;             //数据口为输出
 003C E8DF              xcall _delay_3us
 003E                   .dbline 59
 003E           ;     Data_DDR=0xFF;
 003E E7DF              xcall _delay_3us
 0040                   .dbline -2
 0040           L3:
 0040                   .dbline 0 ; func end
 0040 0895              ret
 0042                   .dbend
 0042                   .dbfunc e delay_50us _delay_50us fV
                        .even
 0042           _delay_50us::
 0042                   .dbline -1
 0042                   .dbline 63
 0042           ; 
 0042           ;     PORTD=0xFF;               //74HC573的控制口，设置为输出
 0042           ;     DDRD=0xFF;
 0042           ;       
 0042                   .dbline 64
 0042           ;       PORTB=0xFF;                               //关闭发光二极管
 0042 FBDF              xcall _delay_10us
 0044                   .dbline 65
 0044           ;       DDRB=0xFF;
 0044 FADF              xcall _delay_10us
 0046                   .dbline 66
 0046           ; }
 0046 F9DF              xcall _delay_10us
 0048                   .dbline 67
 0048           ; 
 0048 F8DF              xcall _delay_10us
 004A                   .dbline -2
 004A           L4:
 004A                   .dbline 0 ; func end
 004A 0895              ret
 004C                   .dbend
 004C                   .dbfunc e delay_100us _delay_100us fV
                        .even
 004C           _delay_100us::
 004C                   .dbline -1
 004C                   .dbline 70
 004C           ; //*************************************************************************
 004C           ; //                    74HC573控制数码管动态扫描显示函数，显示采集到的温度
 004C           ; //*************************************************************************
 004C                   .dbline 71
 004C           ; 
 004C FADF              xcall _delay_50us
 004E                   .dbline 72
 004E           ; void Display_DS18B20(uint data_b,uint data_s,uint data_g)
 004E F9DF              xcall _delay_50us
 0050                   .dbline -2
 0050           L5:
 0050                   .dbline 0 ; func end
 0050 0895              ret
 0052                   .dbend
 0052                   .dbfunc e delay_n100us _delay_n100us fV
 0052           ;         n100us -> R20
                        .even
 0052           _delay_n100us::
 0052 0E940000          xcall push_gset1
 0056 402F              mov R20,R16
 0058                   .dbline -1
 0058                   .dbline 75
 0058           ; {
 0058           ;        uchar i,j;
 0058           ;        System_Init();
 0058 01C0              xjmp L8
 005A           L7:
 005A                   .dbline 77
 005A F8DF              xcall _delay_100us
 005C           L8:
 005C                   .dbline 76
 005C           ;      j=0x01;                    //此数据用来控制位选
 005C 242E              mov R2,R20
 005E 3324              clr R3
 0060 4150              subi R20,1
 0062 2220              tst R2
 0064 D1F7              brne L7
 0066                   .dbline -2
 0066           L6:
 0066 0E940000          xcall pop_gset1
 006A                   .dbline 0 ; func end
 006A 0895              ret
 006C                   .dbsym r n100us 20 c
 006C                   .dbend
 006C                   .dbfunc e delay_1ms _delay_1ms fV
                        .even
 006C           _delay_1ms::
 006C                   .dbline -1
 006C                   .dbline 89
 006C           ;  for(i=0;i<5;i++)               //用后3位数码管来显示
 006C           ;   {
 006C           ;      D_LE1;                     
 006C           ;      W_LE1;                     
 006C           ;      Data_IO=~j;                
 006C           ;      W_LE0;                      
 006C           ;        j=(j<<1);
 006C           ;      Data_IO=0x00;           
 006C           ;      D_LE0;                      
 006C           ;      delay_nms(1);                
 006C           ;   }
 006C           ;      D_LE1;                    
 006C           ;      W_LE1;                    
 006C                   .dbline 90
 006C           ;      Data_IO=~j;               
 006C EFDF              xcall _delay_100us
 006E                   .dbline 91
 006E           ;      W_LE0;                    
 006E EEDF              xcall _delay_100us
 0070                   .dbline 92
 0070           ;        j=(j<<1);
 0070 EDDF              xcall _delay_100us
 0072                   .dbline 93
 0072           ;      Data_IO=table[A1];         
 0072 ECDF              xcall _delay_100us
 0074                   .dbline 94
 0074           ;      D_LE0;                    
 0074 EBDF              xcall _delay_100us
 0076                   .dbline 95
 0076           ;      delay_nms(1);              
 0076 EADF              xcall _delay_100us
 0078                   .dbline 96
 0078           ; 
 0078 E9DF              xcall _delay_100us
 007A                   .dbline 97
 007A           ;      D_LE1;                     
 007A E8DF              xcall _delay_100us
 007C                   .dbline 98
 007C           ;      W_LE1;                     
 007C E7DF              xcall _delay_100us
 007E                   .dbline 99
 007E           ;      Data_IO=~j;                
 007E E6DF              xcall _delay_100us
 0080                   .dbline -2
 0080           L10:
 0080                   .dbline 0 ; func end
 0080 0895              ret
 0082                   .dbend
 0082                   .dbfunc e delay_nms _delay_nms fV
 0082           ;            nms -> R20,R21
                        .even
 0082           _delay_nms::
 0082 0E940000          xcall push_gset1
 0086 A801              movw R20,R16
 0088                   .dbline -1
 0088                   .dbline 109
 0088           ;      W_LE0;                      
 0088           ;        j=(j<<1);
 0088           ;      Data_IO=table[A2]|0x80;         //显示小数点    
 0088           ;      D_LE0;                      
 0088           ;      delay_nms(1);                
 0088           ; 
 0088           ;        D_LE1;                     
 0088           ;      W_LE1;                     
 0088           ;      Data_IO=~j;                
 0088           ;      W_LE0;                      
 0088 01C0              xjmp L13
 008A           L12:
 008A                   .dbline 111
 008A F0DF              xcall _delay_1ms
 008C           L13:
 008C                   .dbline 110
 008C           ;        j=(j<<1);
 008C 1A01              movw R2,R20
 008E 4150              subi R20,1
 0090 5040              sbci R21,0
 0092 2220              tst R2
 0094 D1F7              brne L12
 0096 3320              tst R3
 0098 C1F7              brne L12
 009A           X0:
 009A                   .dbline -2
 009A           L11:
 009A 0E940000          xcall pop_gset1
 009E                   .dbline 0 ; func end
 009E 0895              ret
 00A0                   .dbsym r nms 20 i
 00A0                   .dbend
 00A0                   .dbfunc e delay_ns _delay_ns fV
 00A0           ;             ns -> R20
                        .even
 00A0           _delay_ns::
 00A0 0E940000          xcall push_gset1
 00A4 402F              mov R20,R16
 00A6                   .dbline -1
 00A6                   .dbline 114
 00A6           ;      Data_IO=table[A3];           
 00A6           ;      D_LE0;                      
 00A6           ;      delay_nms(1);                
 00A6           ; 
 00A6 03C0              xjmp L17
 00A8           L16:
 00A8                   .dbline 116
 00A8 08EE              ldi R16,1000
 00AA 13E0              ldi R17,3
 00AC EADF              xcall _delay_nms
 00AE           L17:
 00AE                   .dbline 115
 00AE           ;        D_LE1;                     
 00AE 242E              mov R2,R20
 00B0 3324              clr R3
 00B2 4150              subi R20,1
 00B4 2220              tst R2
 00B6 C1F7              brne L16
 00B8                   .dbline -2
 00B8           L15:
 00B8 0E940000          xcall pop_gset1
 00BC                   .dbline 0 ; func end
 00BC 0895              ret
 00BE                   .dbsym r ns 20 c
 00BE                   .dbend
                        .area data(ram, con, rel)
 0000                   .dbfile C:/icc/include/delay.h
 0000           _table::
 0000                   .blkb 2
                        .area idata
 0000 3F06              .byte 63,6
                        .area data(ram, con, rel)
 0002                   .dbfile C:/icc/include/delay.h
 0002                   .blkb 2
                        .area idata
 0002 5B4F              .byte 91,'O
                        .area data(ram, con, rel)
 0004                   .dbfile C:/icc/include/delay.h
 0004                   .blkb 2
                        .area idata
 0004 666D              .byte 'f,'m
                        .area data(ram, con, rel)
 0006                   .dbfile C:/icc/include/delay.h
 0006                   .blkb 2
                        .area idata
 0006 7D07              .byte 125,7
                        .area data(ram, con, rel)
 0008                   .dbfile C:/icc/include/delay.h
 0008                   .blkb 2
                        .area idata
 0008 7F6F              .byte 127,'o
                        .area data(ram, con, rel)
 000A                   .dbfile C:/icc/include/delay.h
 000A                   .blkb 2
                        .area idata
 000A 777C              .byte 'w,124
                        .area data(ram, con, rel)
 000C                   .dbfile C:/icc/include/delay.h
 000C                   .blkb 2
                        .area idata
 000C 395E              .byte 57,94
                        .area data(ram, con, rel)
 000E                   .dbfile C:/icc/include/delay.h
 000E                   .blkb 2
                        .area idata
 000E 7971              .byte 'y,'q
                        .area data(ram, con, rel)
 0010                   .dbfile C:/icc/include/delay.h
 0010                   .dbfile E:\ATMEGA128开发板\我的ATMEGA128开发板\配套资料\16.DS18B20温度传感器实验\DS18B20\DS18B20.C
 0010                   .dbsym e table _table A[16:16]c
                        .area text(rom, con, rel)
 00BE                   .dbfile E:\ATMEGA128开发板\我的ATMEGA128开发板\配套资料\16.DS18B20温度传感器实验\DS18B20\DS18B20.C
 00BE                   .dbfunc e System_Init _System_Init fV
                        .even
 00BE           _System_Init::
 00BE                   .dbline -1
 00BE                   .dbline 57
 00BE                   .dbline 58
 00BE 8FEF              ldi R24,255
 00C0 8BBB              out 0x1b,R24
 00C2                   .dbline 59
 00C2 8ABB              out 0x1a,R24
 00C4                   .dbline 61
 00C4 82BB              out 0x12,R24
 00C6                   .dbline 62
 00C6 81BB              out 0x11,R24
 00C8                   .dbline 64
 00C8 88BB              out 0x18,R24
 00CA                   .dbline 65
 00CA 87BB              out 0x17,R24
 00CC                   .dbline -2
 00CC           L19:
 00CC                   .dbline 0 ; func end
 00CC 0895              ret
 00CE                   .dbend
 00CE                   .dbfunc e Display_DS18B20 _Display_DS18B20 fV
 00CE           ;              i -> R20
 00CE           ;              j -> R22
 00CE           ;         data_g -> y+4
 00CE           ;         data_s -> R20,R21
 00CE           ;         data_b -> R22,R23
                        .even
 00CE           _Display_DS18B20::
 00CE 0E940000          xcall push_gset2
 00D2 A901              movw R20,R18
 00D4 B801              movw R22,R16
 00D6                   .dbline -1
 00D6                   .dbline 73
 00D6                   .dbline 75
 00D6 F3DF              xcall _System_Init
 00D8                   .dbline 76
 00D8 61E0              ldi R22,1
 00DA                   .dbline 77
 00DA 4427              clr R20
 00DC 0EC0              xjmp L24
 00DE           L21:
 00DE                   .dbline 78
 00DE                   .dbline 79
 00DE 949A              sbi 0x12,4
 00E0                   .dbline 80
 00E0 959A              sbi 0x12,5
 00E2                   .dbline 81
 00E2 262E              mov R2,R22
 00E4 2094              com R2
 00E6 2BBA              out 0x1b,R2
 00E8                   .dbline 82
 00E8 9598              cbi 0x12,5
 00EA                   .dbline 83
 00EA 660F              lsl R22
 00EC                   .dbline 84
 00EC 2224              clr R2
 00EE 2BBA              out 0x1b,R2
 00F0                   .dbline 85
 00F0 9498              cbi 0x12,4
 00F2                   .dbline 86
 00F2 01E0              ldi R16,1
 00F4 10E0              ldi R17,0
 00F6 C5DF              xcall _delay_nms
 00F8                   .dbline 87
 00F8           L22:
 00F8                   .dbline 77
 00F8 4395              inc R20
 00FA           L24:
 00FA                   .dbline 77
 00FA 4530              cpi R20,5
 00FC 80F3              brlo L21
 00FE                   .dbline 88
 00FE 949A              sbi 0x12,4
 0100                   .dbline 89
 0100 959A              sbi 0x12,5
 0102                   .dbline 90
 0102 262E              mov R2,R22
 0104 2094              com R2
 0106 2BBA              out 0x1b,R2
 0108                   .dbline 91
 0108 9598              cbi 0x12,5
 010A                   .dbline 92
 010A 660F              lsl R22
 010C                   .dbline 93
 010C 80E0              ldi R24,<_table
 010E 90E0              ldi R25,>_table
 0110 E0910500          lds R30,_A1
 0114 F0910600          lds R31,_A1+1
 0118 E80F              add R30,R24
 011A F91F              adc R31,R25
 011C 2080              ldd R2,z+0
 011E 2BBA              out 0x1b,R2
 0120                   .dbline 94
 0120 9498              cbi 0x12,4
 0122                   .dbline 95
 0122 01E0              ldi R16,1
 0124 10E0              ldi R17,0
 0126 ADDF              xcall _delay_nms
 0128                   .dbline 97
 0128 949A              sbi 0x12,4
 012A                   .dbline 98
 012A 959A              sbi 0x12,5
 012C                   .dbline 99
 012C 262E              mov R2,R22
 012E 2094              com R2
 0130 2BBA              out 0x1b,R2
 0132                   .dbline 100
 0132 9598              cbi 0x12,5
 0134                   .dbline 101
 0134 660F              lsl R22
 0136                   .dbline 102
 0136 80E0              ldi R24,<_table
 0138 90E0              ldi R25,>_table
 013A E0910300          lds R30,_A2
 013E F0910400          lds R31,_A2+1
 0142 E80F              add R30,R24
 0144 F91F              adc R31,R25
 0146 8081              ldd R24,z+0
 0148 8068              ori R24,128
 014A 8BBB              out 0x1b,R24
 014C                   .dbline 103
 014C 9498              cbi 0x12,4
 014E                   .dbline 104
 014E 01E0              ldi R16,1
 0150 10E0              ldi R17,0
 0152 97DF              xcall _delay_nms
 0154                   .dbline 106
 0154 949A              sbi 0x12,4
 0156                   .dbline 107
 0156 959A              sbi 0x12,5
 0158                   .dbline 108
 0158 262E              mov R2,R22
 015A 2094              com R2
 015C 2BBA              out 0x1b,R2
 015E                   .dbline 109
 015E 9598              cbi 0x12,5
 0160                   .dbline 110
 0160 660F              lsl R22
 0162                   .dbline 111
 0162 80E0              ldi R24,<_table
 0164 90E0              ldi R25,>_table
 0166 E0910100          lds R30,_A3
 016A F0910200          lds R31,_A3+1
 016E E80F              add R30,R24
 0170 F91F              adc R31,R25
 0172 2080              ldd R2,z+0
 0174 2BBA              out 0x1b,R2
 0176                   .dbline 112
 0176 9498              cbi 0x12,4
 0178                   .dbline 113
 0178 01E0              ldi R16,1
 017A 10E0              ldi R17,0
 017C 82DF              xcall _delay_nms
 017E                   .dbline 115
 017E 949A              sbi 0x12,4
 0180                   .dbline 116
 0180           ;      W_LE1;                     
 0180 959A              sbi 0x12,5
 0182                   .dbline 117
 0182           ;      Data_IO=0xff;                
 0182 8FEF              ldi R24,255
 0184 8BBB              out 0x1b,R24
 0186                   .dbline 118
 0186           ;      W_LE0;                      
 0186 9598              cbi 0x12,5
 0188                   .dbline -2
 0188           L20:
 0188 0E940000          xcall pop_gset2
 018C                   .dbline 0 ; func end
 018C 0895              ret
 018E                   .dbsym r i 20 c
 018E                   .dbsym r j 22 c
 018E                   .dbsym l data_g 4 i
 018E                   .dbsym r data_s 20 i
 018E                   .dbsym r data_b 22 i
 018E                   .dbend
 018E                   .dbfunc e DS18B20_Reset _DS18B20_Reset fc
 018E           ;              i -> R20
                        .even
 018E           _DS18B20_Reset::
 018E 0E940000          xcall push_gset1
 0192                   .dbline -1
 0192                   .dbline 129
 0192           ; 
 0192           ; }
 0192           ; 
 0192           ; 
 0192           ; //************************************************************************* 
 0192           ; //                    DS18B20初始化
 0192           ; //*************************************************************************
 0192           ; 
 0192           ; unsigned char DS18B20_Reset(void)                 //初始化和复位
 0192           ; 
 0192           ; {
 0192                   .dbline 131
 0192           ; unsigned char i;
 0192           ;     DQ_OUT;
 0192 149A              sbi 0x2,4
 0194                   .dbline 132
 0194           ;       DQ_CLR;
 0194 1C98              cbi 0x3,4
 0196                   .dbline 133
 0196           ;       delay_n100us(5);                                //延时500uS(480-960)
 0196 05E0              ldi R16,5
 0198 5CDF              xcall _delay_n100us
 019A                   .dbline 134
 019A           ;       DQ_SET;
 019A 1C9A              sbi 0x3,4
 019C                   .dbline 135
 019C           ;       DQ_IN;
 019C 1498              cbi 0x2,4
 019E                   .dbline 136
 019E           ;       delay_n100us(1);                                //延时100uS
 019E 01E0              ldi R16,1
 01A0 58DF              xcall _delay_n100us
 01A2                   .dbline 137
 01A2           ;       i = DQ_R;
 01A2 41B1              in R20,0x1
 01A4 4071              andi R20,16
 01A6                   .dbline 138
 01A6           ;       delay_n100us(5);                                //延时500uS(保持>480uS)
 01A6 05E0              ldi R16,5
 01A8 54DF              xcall _delay_n100us
 01AA                   .dbline 140
 01AA           ;       
 01AA           ;       if (i) 
 01AA 4423              tst R20
 01AC 11F0              breq L26
 01AE                   .dbline 141
 01AE           ;         {
 01AE                   .dbline 142
 01AE           ;               return 0x00;
 01AE 0027              clr R16
 01B0 01C0              xjmp L25
 01B2           L26:
 01B2                   .dbline 146
 01B2           ;               
 01B2           ;         }
 01B2           ;       else 
 01B2           ;         {
 01B2                   .dbline 147
 01B2           ;               return 0x01;
 01B2 01E0              ldi R16,1
 01B4                   .dbline -2
 01B4           L25:
 01B4 0E940000          xcall pop_gset1
 01B8                   .dbline 0 ; func end
 01B8 0895              ret
 01BA                   .dbsym r i 20 c
 01BA                   .dbend
 01BA                   .dbfunc e DS18B20_Read_byte _DS18B20_Read_byte fc
 01BA           ;          value -> R20
 01BA           ;              i -> R22
                        .even
 01BA           _DS18B20_Read_byte::
 01BA 0E940000          xcall push_gset2
 01BE                   .dbline -1
 01BE                   .dbline 159
 01BE           ;               
 01BE           ;         }
 01BE           ; 
 01BE           ; }
 01BE           ; 
 01BE           ; 
 01BE           ; //************************************************************************* 
 01BE           ; //                    DS18B20读一个字节函数
 01BE           ; //************************************************************************* 
 01BE           ;    
 01BE           ; unsigned char DS18B20_Read_byte(void) 
 01BE           ; {
 01BE                   .dbline 162
 01BE           ; 
 01BE           ;       unsigned char i;
 01BE           ;       unsigned char value = 0;
 01BE 4427              clr R20
 01C0                   .dbline 163
 01C0           ;       for (i = 8; i != 0; i--) 
 01C0 68E0              ldi R22,8
 01C2 0CC0              xjmp L32
 01C4           L29:
 01C4                   .dbline 164
 01C4           ;         {
 01C4                   .dbline 165
 01C4           ;               value >>= 1;
 01C4 4695              lsr R20
 01C6                   .dbline 166
 01C6           ;               DQ_OUT;
 01C6 149A              sbi 0x2,4
 01C8                   .dbline 167
 01C8           ;               DQ_CLR;
 01C8 1C98              cbi 0x3,4
 01CA                   .dbline 168
 01CA           ;         delay_10us();                         //*延时10uS
 01CA 37DF              xcall _delay_10us
 01CC                   .dbline 170
 01CC           ;               
 01CC           ;               DQ_SET;
 01CC 1C9A              sbi 0x3,4
 01CE                   .dbline 171
 01CE           ;               DQ_IN;
 01CE 1498              cbi 0x2,4
 01D0                   .dbline 172
 01D0           ;         delay_10us();                         //*延时10uS
 01D0 34DF              xcall _delay_10us
 01D2                   .dbline 174
 01D2           ;               
 01D2           ;               if (DQ_R) 
 01D2 0C9B              sbis 0x1,4
 01D4 01C0              rjmp L33
 01D6                   .dbline 175
 01D6           ;                 {
 01D6                   .dbline 176
 01D6           ;                       value|=0x80;
 01D6 4068              ori R20,128
 01D8                   .dbline 178
 01D8           ;                       
 01D8           ;                 }
 01D8           L33:
 01D8                   .dbline 179
 01D8 34DF              xcall _delay_50us
 01DA                   .dbline 181
 01DA           L30:
 01DA                   .dbline 163
 01DA 6A95              dec R22
 01DC           L32:
 01DC                   .dbline 163
 01DC 6623              tst R22
 01DE 91F7              brne L29
 01E0                   .dbline 183
 01E0           ;               delay_50us();                          //*延时50uS
 01E0           ;               
 01E0           ;         }
 01E0           ;       
 01E0           ;       return(value);
 01E0 042F              mov R16,R20
 01E2                   .dbline -2
 01E2           L28:
 01E2 0E940000          xcall pop_gset2
 01E6                   .dbline 0 ; func end
 01E6 0895              ret
 01E8                   .dbsym r value 20 c
 01E8                   .dbsym r i 22 c
 01E8                   .dbend
 01E8                   .dbfunc e ds1820_write_byte _ds1820_write_byte fV
 01E8           ;              i -> R20
 01E8           ;          value -> R22
                        .even
 01E8           _ds1820_write_byte::
 01E8 0E940000          xcall push_gset2
 01EC 602F              mov R22,R16
 01EE                   .dbline -1
 01EE                   .dbline 191
 01EE           ; }
 01EE           ; 
 01EE           ; //************************************************************************* 
 01EE           ; //                    向18B20写一个字节函数
 01EE           ; //*************************************************************************  
 01EE           ; 
 01EE           ; void ds1820_write_byte(unsigned char value) 
 01EE           ; {
 01EE                   .dbline 194
 01EE           ; 
 01EE           ;       unsigned char i;
 01EE           ;       for (i = 8; i != 0; i--) 
 01EE 48E0              ldi R20,8
 01F0 0AC0              xjmp L39
 01F2           L36:
 01F2                   .dbline 195
 01F2           ;         {
 01F2                   .dbline 196
 01F2           ;               DQ_OUT;
 01F2 149A              sbi 0x2,4
 01F4                   .dbline 197
 01F4           ;               DQ_CLR;
 01F4 1C98              cbi 0x3,4
 01F6                   .dbline 198
 01F6           ;         delay_10us();                          //延时10uS
 01F6 21DF              xcall _delay_10us
 01F8                   .dbline 199
 01F8           ;               if (value & 0x01) 
 01F8 60FD              sbrc R22,0
 01FA                   .dbline 200
 01FA           ;                 {
 01FA                   .dbline 201
 01FA           ;                       DQ_SET;
 01FA 1C9A              sbi 0x3,4
 01FC                   .dbline 203
 01FC           ;                       
 01FC           ;                 }
 01FC           L40:
 01FC                   .dbline 204
 01FC 01E0              ldi R16,1
 01FE 29DF              xcall _delay_n100us
 0200                   .dbline 205
 0200 1C9A              sbi 0x3,4
 0202                   .dbline 206
 0202 6695              lsr R22
 0204                   .dbline 208
 0204           L37:
 0204                   .dbline 194
 0204 4A95              dec R20
 0206           L39:
 0206                   .dbline 194
 0206 4423              tst R20
 0208 A1F7              brne L36
 020A                   .dbline -2
 020A           L35:
 020A 0E940000          xcall pop_gset2
 020E                   .dbline 0 ; func end
 020E 0895              ret
 0210                   .dbsym r i 20 c
 0210                   .dbsym r value 22 c
 0210                   .dbend
 0210                   .dbfunc e ds1820_start _ds1820_start fV
                        .even
 0210           _ds1820_start::
 0210                   .dbline -1
 0210                   .dbline 216
 0210           ;               delay_n100us(1);                        //延时100uS
 0210           ;               DQ_SET;                                 //位结束
 0210           ;               value >>= 1;
 0210           ;               
 0210           ;         }
 0210           ;       
 0210           ; }
 0210           ; //*************************************************************************
 0210           ; //                            发送温度转换命令
 0210           ; //************************************************************************* 
 0210           ; 
 0210           ; /*启动ds1820转换*/
 0210           ; void ds1820_start(void) {
 0210                   .dbline 218
 0210           ; 
 0210           ;       DS18B20_Reset();
 0210 BEDF              xcall _DS18B20_Reset
 0212                   .dbline 219
 0212           ;       ds1820_write_byte(0xCC);        
 0212 0CEC              ldi R16,204
 0214 E9DF              xcall _ds1820_write_byte
 0216                   .dbline 220
 0216           ;       ds1820_write_byte(0x44);        //启动转换
 0216 04E4              ldi R16,68
 0218 E7DF              xcall _ds1820_write_byte
 021A                   .dbline -2
 021A           L42:
 021A                   .dbline 0 ; func end
 021A 0895              ret
 021C                   .dbend
 021C                   .dbfunc e DS18B20_Read_temp _DS18B20_Read_temp fi
 021C           ;            buf -> y+0
 021C           ;              i -> R20,R21
                        .even
 021C           _DS18B20_Read_temp::
 021C 0E940000          xcall push_gset2
 0220 2D97              sbiw R28,13
 0222                   .dbline -1
 0222                   .dbline 228
 0222           ; }
 0222           ; 
 0222           ; //*************************************************************************
 0222           ; //                            DS8B20读取温度信息
 0222           ; //************************************************************************* 
 0222           ; 
 0222           ; unsigned int DS18B20_Read_temp(void) 
 0222           ; {
 0222                   .dbline 233
 0222           ; 
 0222           ;       unsigned int i;
 0222           ;       unsigned char buf[9];
 0222           ; 
 0222           ;       DS18B20_Reset();
 0222 B5DF              xcall _DS18B20_Reset
 0224                   .dbline 234
 0224           ;       ds1820_write_byte(0xCC);        
 0224 0CEC              ldi R16,204
 0226 E0DF              xcall _ds1820_write_byte
 0228                   .dbline 235
 0228           ;       ds1820_write_byte(0xBE);        //读取温度
 0228 0EEB              ldi R16,190
 022A DEDF              xcall _ds1820_write_byte
 022C                   .dbline 236
 022C           ;       for (i = 0; i < 9; i++) 
 022C 4427              clr R20
 022E 5527              clr R21
 0230 08C0              xjmp L47
 0232           L44:
 0232                   .dbline 237
 0232                   .dbline 238
 0232 C3DF              xcall _DS18B20_Read_byte
 0234 CE01              movw R24,R28
 0236 FA01              movw R30,R20
 0238 E80F              add R30,R24
 023A F91F              adc R31,R25
 023C 0083              std z+0,R16
 023E                   .dbline 239
 023E           L45:
 023E                   .dbline 236
 023E 4F5F              subi R20,255  ; offset = 1
 0240 5F4F              sbci R21,255
 0242           L47:
 0242                   .dbline 236
 0242 4930              cpi R20,9
 0244 E0E0              ldi R30,0
 0246 5E07              cpc R21,R30
 0248 A0F3              brlo L44
 024A                   .dbline 240
 024A           ;      {
 024A           ;         buf[i] = DS18B20_Read_byte(); 
 024A           ;      }
 024A           ;       i = buf[1];
 024A 4981              ldd R20,y+1
 024C 5527              clr R21
 024E                   .dbline 241
 024E           ;       i <<= 8;
 024E 542F              mov R21,R20
 0250 4427              clr R20
 0252                   .dbline 242
 0252           ;       i |= buf[0];
 0252 2880              ldd R2,y+0
 0254 3324              clr R3
 0256 4229              or R20,R2
 0258 5329              or R21,R3
 025A                   .dbline 243
 025A           ;       temp_value=i;
 025A 50930A00          sts _temp_value+1,R21
 025E 40930900          sts _temp_value,R20
 0262                   .dbline 244
 0262           ;     temp_value=temp_value*0.625; //不是乘以0.0625的原因是为了把小数点后一位数据也转化为可以显示的数据
 0262 00E0              ldi R16,<L51
 0264 10E0              ldi R17,>L51
 0266 0E940000          xcall lpm32
 026A 3A93              st -y,R19
 026C 2A93              st -y,R18
 026E 1A93              st -y,R17
 0270 0A93              st -y,R16
 0272 00E0              ldi R16,<L52
 0274 10E0              ldi R17,>L52
 0276 0E940000          xcall lpm32
 027A 3A93              st -y,R19
 027C 2A93              st -y,R18
 027E 1A93              st -y,R17
 0280 0A93              st -y,R16
 0282 00910900          lds R16,_temp_value
 0286 10910A00          lds R17,_temp_value+1
 028A 1695              lsr R17
 028C 0795              ror R16
 028E 0E940000          xcall int2fp
 0292 3A93              st -y,R19
 0294 2A93              st -y,R18
 0296 1A93              st -y,R17
 0298 0A93              st -y,R16
 029A 0E940000          xcall empy32fs
 029E 00910900          lds R16,_temp_value
 02A2 10910A00          lds R17,_temp_value+1
 02A6 0170              andi R16,1
 02A8 1070              andi R17,0
 02AA 0E940000          xcall int2fp
 02AE 3A93              st -y,R19
 02B0 2A93              st -y,R18
 02B2 1A93              st -y,R17
 02B4 0A93              st -y,R16
 02B6 0E940000          xcall add32fs
 02BA 0E940000          xcall empy32f
 02BE FE01              movw R30,R28
 02C0 0187              std z+9,R16
 02C2 1287              std z+10,R17
 02C4 2387              std z+11,R18
 02C6 3487              std z+12,R19
 02C8 FE01              movw R30,R28
 02CA 2184              ldd R2,z+9
 02CC 3284              ldd R3,z+10
 02CE 4384              ldd R4,z+11
 02D0 5484              ldd R5,z+12
 02D2 5A92              st -y,R5
 02D4 4A92              st -y,R4
 02D6 3A92              st -y,R3
 02D8 2A92              st -y,R2
 02DA 00E0              ldi R16,<L53
 02DC 10E0              ldi R17,>L53
 02DE 0E940000          xcall lpm32
 02E2 3A93              st -y,R19
 02E4 2A93              st -y,R18
 02E6 1A93              st -y,R17
 02E8 0A93              st -y,R16
 02EA 0E940000          xcall cmp32f
 02EE CCF0              brlt L49
 02F0 FE01              movw R30,R28
 02F2 2184              ldd R2,z+9
 02F4 3284              ldd R3,z+10
 02F6 4384              ldd R4,z+11
 02F8 5484              ldd R5,z+12
 02FA 5A92              st -y,R5
 02FC 4A92              st -y,R4
 02FE 3A92              st -y,R3
 0300 2A92              st -y,R2
 0302 00E0              ldi R16,<L53
 0304 10E0              ldi R17,>L53
 0306 0E940000          xcall lpm32
 030A 3A93              st -y,R19
 030C 2A93              st -y,R18
 030E 1A93              st -y,R17
 0310 0A93              st -y,R16
 0312 0E940000          xcall sub32f
 0316 0E940000          xcall fp2int
 031A B801              movw R22,R16
 031C 6050              subi R22,0  ; offset = 32768
 031E 7048              sbci R23,128
 0320 08C0              xjmp L50
 0322           L49:
 0322 FE01              movw R30,R28
 0324 0185              ldd R16,z+9
 0326 1285              ldd R17,z+10
 0328 2385              ldd R18,z+11
 032A 3485              ldd R19,z+12
 032C 0E940000          xcall fp2int
 0330 B801              movw R22,R16
 0332           L50:
 0332 70930A00          sts _temp_value+1,R23
 0336 60930900          sts _temp_value,R22
 033A                   .dbline 247
 033A           ;                                       //比如温度本身为27.5度，为了在后续的数据处理程序中得到BCD码，我们先放大到275
 033A           ;                                 //然后在显示的时候确定小数点的位置即可，就能显示出27.5度了
 033A           ;       return i;
 033A 8A01              movw R16,R20
 033C                   .dbline -2
 033C           L43:
 033C 2D96              adiw R28,13
 033E 0E940000          xcall pop_gset2
 0342                   .dbline 0 ; func end
 0342 0895              ret
 0344                   .dbsym l buf 0 A[9:9]c
 0344                   .dbsym r i 20 i
 0344                   .dbend
 0344                   .dbfunc e data_do _data_do fV
 0344           ;            A2t -> R20,R21
 0344           ;         temp_d -> R20,R21
                        .even
 0344           _data_do::
 0344 0E940000          xcall push_gset1
 0348 A801              movw R20,R16
 034A                   .dbline -1
 034A                   .dbline 256
 034A           ; }
 034A           ; 
 034A           ; 
 034A           ; 
 034A           ; //*************************************************************************
 034A           ; //            温度数据处理函数
 034A           ; //*************************************************************************
 034A           ;  void data_do(uint temp_d)
 034A           ;  {
 034A                   .dbline 258
 034A           ;      uint A2t;
 034A           ;      A1=temp_d/100;                       //分出百，十，和个位
 034A 24E6              ldi R18,100
 034C 30E0              ldi R19,0
 034E 8A01              movw R16,R20
 0350 0E940000          xcall div16u
 0354 10930600          sts _A1+1,R17
 0358 00930500          sts _A1,R16
 035C                   .dbline 259
 035C           ;      A2t=temp_d%100;
 035C 24E6              ldi R18,100
 035E 30E0              ldi R19,0
 0360 8A01              movw R16,R20
 0362 0E940000          xcall mod16u
 0366 A801              movw R20,R16
 0368                   .dbline 260
 0368           ;      A2=A2t/10;
 0368 2AE0              ldi R18,10
 036A 30E0              ldi R19,0
 036C 0E940000          xcall div16u
 0370 10930400          sts _A2+1,R17
 0374 00930300          sts _A2,R16
 0378                   .dbline 261
 0378           ;      A3=A2t%10;
 0378 2AE0              ldi R18,10
 037A 30E0              ldi R19,0
 037C 8A01              movw R16,R20
 037E 0E940000          xcall mod16u
 0382 10930200          sts _A3+1,R17
 0386 00930100          sts _A3,R16
 038A                   .dbline -2
 038A           L54:
 038A 0E940000          xcall pop_gset1
 038E                   .dbline 0 ; func end
 038E 0895              ret
 0390                   .dbsym r A2t 20 i
 0390                   .dbsym r temp_d 20 i
 0390                   .dbend
 0390                   .dbfunc e main _main fV
 0390           ;              j -> R20,R21
                        .even
 0390           _main::
 0390 2297              sbiw R28,2
 0392                   .dbline -1
 0392                   .dbline 269
 0392           ; }
 0392           ; 
 0392           ; //*************************************************************************
 0392           ; //                    主程序
 0392           ; //*************************************************************************
 0392           ; 
 0392           ; void main(void)
 0392           ; {
 0392                   .dbline 271
 0392           ;     uint j;
 0392           ;       DS18B20_Reset();                                //复位D18B20
 0392 FDDE              xcall _DS18B20_Reset
 0394 1FC0              xjmp L57
 0396           L56:
 0396                   .dbline 273
 0396           ; while (1)
 0396           ;     {
 0396                   .dbline 274
 0396           ;               ds1820_start();                    //启动一次转换
 0396 3CDF              xcall _ds1820_start
 0398                   .dbline 275
 0398           ;               DS18B20_Read_temp();               //读取温度数值
 0398 41DF              xcall _DS18B20_Read_temp
 039A                   .dbline 276
 039A           ;         data_do(temp_value);             //处理数据，得到要显示的值
 039A 00910900          lds R16,_temp_value
 039E 10910A00          lds R17,_temp_value+1
 03A2 D0DF              xcall _data_do
 03A4                   .dbline 277
 03A4           ; for(j=0;j<200;j++)
 03A4 4427              clr R20
 03A6 5527              clr R21
 03A8 11C0              xjmp L62
 03AA           L59:
 03AA                   .dbline 278
 03AA                   .dbline 279
 03AA 20900100          lds R2,_A3
 03AE 30900200          lds R3,_A3+1
 03B2 3982              std y+1,R3
 03B4 2882              std y+0,R2
 03B6 20910300          lds R18,_A2
 03BA 30910400          lds R19,_A2+1
 03BE 00910500          lds R16,_A1
 03C2 10910600          lds R17,_A1+1
 03C6 83DE              xcall _Display_DS18B20
 03C8                   .dbline 280
 03C8           L60:
 03C8                   .dbline 277
 03C8 4F5F              subi R20,255  ; offset = 1
 03CA 5F4F              sbci R21,255
 03CC           L62:
 03CC                   .dbline 277
 03CC 483C              cpi R20,200
 03CE E0E0              ldi R30,0
 03D0 5E07              cpc R21,R30
 03D2 58F3              brlo L59
 03D4                   .dbline 283
 03D4           L57:
 03D4                   .dbline 272
 03D4 E0CF              xjmp L56
 03D6           X1:
 03D6                   .dbline -2
 03D6           L55:
 03D6 2296              adiw R28,2
 03D8                   .dbline 0 ; func end
 03D8 0895              ret
 03DA                   .dbsym r j 20 i
 03DA                   .dbend
                        .area bss(ram, con, rel)
 0000                   .dbfile E:\ATMEGA128开发板\我的ATMEGA128开发板\配套资料\16.DS18B20温度传感器实验\DS18B20\DS18B20.C
 0000           _flag1::
 0000                   .blkb 1
 0001                   .dbsym e flag1 _flag1 c
 0001           _A3::
 0001                   .blkb 2
 0003                   .dbsym e A3 _A3 i
 0003           _A2::
 0003                   .blkb 2
 0005                   .dbsym e A2 _A2 i
 0005           _A1::
 0005                   .blkb 2
 0007                   .dbsym e A1 _A1 i
 0007           _temp::
 0007                   .blkb 2
 0009                   .dbsym e temp _temp i
 0009           _temp_value::
 0009                   .blkb 2
 000B                   .dbsym e temp_value _temp_value i
 000B           _key::
 000B                   .blkb 1
 000C                   .dbsym e key _key c
                        .area lit(rom, con, rel)
 0000           L53:
 0000 00000047          .word 0x0,0x4700
 0004           L52:
 0004 00000040          .word 0x0,0x4000
 0008           L51:
 0008 0000203F          .word 0x0,0x3f20
